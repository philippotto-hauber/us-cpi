group_by(name, category) %>%
summarise(value_mm = growth_rate(value, date, "2021-03-01", "2021-04-01")) %>%
mutate(date = as_date("2021-04-01")) %>%
select(name, date, value_mm, category) %>% rbind(tmp) -> tmp
tmp2 <- merge(tmp, select(df, name, date, weight), by = c("name", "date"))
df %>%
group_by(name, category) %>%
summarise(diff_pandemic = growth_rate(value, date, "2020-02-01", "2021-03-01")) %>%
select(name, diff_pandemic)-> tmp
tmp3 <- merge(tmp2, tmp, by = "name")
tmp3$date_str <- "May 21"
tmp3$date_str[tmp3$date == as_date("2021-04-01")] <- "Apr 21"
View(tmp3)
tmp3 %>%
filter(name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels")) %>%
ggplot(aes(x = diff_mar21, y = value_mm))+
geom_point(aes(color = category, size = weight, shape = date_str))+
scale_color_jco()+
ylim(c(0, 18))+
scale_size(breaks = c(0.1, 0.5, 2), labels = c("0.1%", "0.5%", "2%"))+
labs(title = "Vereinigte Staaten: Verbraucherpreisindex",
subtitle = "20 Waren und Dienstleistungen (ohne Energie und Lebensmittel) mit der höchsten Monatsrate im April 2021",
caption = "Quelle: Bureau of Labor Statistics, eigene Berechnungen.",
y="Veränderung April 2021 ggü. März 2021",
x = "Veränderung April 2021 ggü. Februar 2020")
tmp3 %>%
filter(name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels")) %>%
ggplot(aes(x = diff_pandemic, y = value_mm))+
geom_point(aes(color = category, size = weight, shape = date_str))+
scale_color_jco()+
ylim(c(0, 18))+
scale_size(breaks = c(0.1, 0.5, 2), labels = c("0.1%", "0.5%", "2%"))+
labs(title = "Vereinigte Staaten: Verbraucherpreisindex",
subtitle = "20 Waren und Dienstleistungen (ohne Energie und Lebensmittel) mit der höchsten Monatsrate im April 2021",
caption = "Quelle: Bureau of Labor Statistics, eigene Berechnungen.",
y="Veränderung April 2021 ggü. März 2021",
x = "Veränderung April 2021 ggü. Februar 2020")
View(tmp3)
range(tmp3$weight)
filter(tmp3, name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels")) %>% range(weight)
View(tmp3)
filter(tmp3, name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels"))
tmp3 %>%
filter(name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels")) %>%
ggplot(aes(x = diff_pandemic, y = value_mm))+
geom_point(aes(color = category, size = weight, shape = date_str))+
scale_color_jco()+
ylim(c(0, 18))+
scale_size(breaks = c(0.1, 0.5, 2), labels = c("0.1%", "0.5%", "2%"))+
labs(title = "Vereinigte Staaten: Verbraucherpreisindex",
subtitle = "20 Waren und Dienstleistungen (ohne Energie und Lebensmittel) mit der höchsten Monatsrate im April 2021",
caption = "Quelle: Bureau of Labor Statistics, eigene Berechnungen.",
y="Veränderung April 2021 ggü. März 2021",
x = "Veränderung April 2021 ggü. Februar 2020")+
geom_vline(xintercept = 0)+
geom_text(aes( label = name),
size = 4,
nudge_x = 0.4,
nudge_y = 0.4)
tmp3 %>%
filter(name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels")) %>%
ggplot(aes(x = diff_pandemic, y = value_mm))+
geom_point(aes(color = category, size = weight, shape = date_str))+
scale_color_jco()+
ylim(c(0, 18))+
scale_size(breaks = c(0.1, 0.5, 2), labels = c("0.1%", "0.5%", "2%"))+
labs(title = "Vereinigte Staaten: Verbraucherpreisindex",
subtitle = "Ausgewählte Waren und Dienstleistungen, Veränderung ggü. Vormonat im April und Mai 2021",
caption = "Quelle: Bureau of Labor Statistics, eigene Berechnungen.",
y="Veränderung ggü. Vormonat",
x = "Veränderung März 2021 ggü. Februar 2020")+
geom_vline(xintercept = 0)+
geom_text(aes( label = name),
size = 4,
nudge_x = 0.4,
nudge_y = 0.4)
ggsave(filename = "plot_cpi_US.pdf", width = 12, height = 6, units = "in")
ifelse(df_plot$name == "Other lodging away from home including hotels and motels", "hotels and motels", df_plot$name)
tmp3 %>%
filter(name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels")) -> dfplot
df_plot$name <- ifelse(df_plot$name == "Other lodging away from home including hotels and motels", "Hotels and motels", df_plot$name)
df_plot%>%
ggplot(aes(x = diff_pandemic, y = value_mm))+
geom_point(aes(color = category, size = weight, shape = date_str))+
scale_color_jco()+
ylim(c(0, 18))+
scale_size(breaks = c(0.1, 0.5, 2), labels = c("0.1%", "0.5%", "2%"))+
labs(title = "Vereinigte Staaten: Verbraucherpreisindex",
subtitle = "Ausgewählte Waren und Dienstleistungen, Veränderung ggü. Vormonat im April und Mai 2021",
caption = "Quelle: Bureau of Labor Statistics, eigene Berechnungen.",
y="Veränderung ggü. Vormonat",
x = "Veränderung März 2021 ggü. Februar 2020")+
geom_vline(xintercept = 0)+
geom_text(aes( label = name),
size = 4,
nudge_x = 0.4,
nudge_y = 0.4)
View(df_plot)
tmp3 %>%
filter(name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels")) -> dfplot
df_plot$name <- ifelse(df_plot$name == "Other lodging away from home including hotels and motels", "Hotels and motels", df_plot$name)
View(dfplot)
df_plot%>%
ggplot(aes(x = diff_pandemic, y = value_mm))+
geom_point(aes(color = category, size = weight, shape = date_str))+
scale_color_jco()+
ylim(c(0, 18))+
scale_size(breaks = c(0.1, 0.5, 2), labels = c("0.1%", "0.5%", "2%"))+
labs(title = "Vereinigte Staaten: Verbraucherpreisindex",
subtitle = "Ausgewählte Waren und Dienstleistungen, Veränderung ggü. Vormonat im April und Mai 2021",
caption = "Quelle: Bureau of Labor Statistics, eigene Berechnungen.",
y="Veränderung ggü. Vormonat",
x = "Veränderung März 2021 ggü. Februar 2020")+
geom_vline(xintercept = 0)+
geom_text(aes( label = name),
size = 4,
nudge_x = 0.4,
nudge_y = 0.4)
tmp3 %>%
filter(name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels")) -> df_plot
df_plot$name <- ifelse(df_plot$name == "Other lodging away from home including hotels and motels", "Hotels and motels", df_plot$name)
df_plot %>%
ggplot(aes(x = diff_pandemic, y = value_mm))+
geom_point(aes(color = category, size = weight, shape = date_str))+
scale_color_jco()+
ylim(c(0, 18))+
scale_size(breaks = c(0.1, 0.5, 2), labels = c("0.1%", "0.5%", "2%"))+
labs(title = "Vereinigte Staaten: Verbraucherpreisindex",
subtitle = "Ausgewählte Waren und Dienstleistungen, Veränderung ggü. Vormonat im April und Mai 2021",
caption = "Quelle: Bureau of Labor Statistics, eigene Berechnungen.",
y="Veränderung ggü. Vormonat",
x = "Veränderung März 2021 ggü. Februar 2020")+
geom_vline(xintercept = 0)+
geom_text(aes( label = name),
size = 4,
nudge_x = 0.4,
nudge_y = 0.4)
?summarise_by
tmp3 %>%
filter(name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels")) -> df_plot
df_plot$name <- ifelse(df_plot$name == "Other lodging away from home including hotels and motels", "Hotels and motels", df_plot$name)
df_plot %>% group_by(name, diff_pandemic) %>%
summarise(y_coord = mean(value_mm)) %>%
select(name, x_coord = diff_pandemic, y_coord) -> df_text
df_plot %>%
ggplot(aes(x = diff_pandemic, y = value_mm))+
geom_point(aes(color = category, size = weight, shape = date_str))+
scale_color_jco()+
ylim(c(0, 18))+
scale_size(breaks = c(0.1, 0.5, 2), labels = c("0.1%", "0.5%", "2%"))+
labs(title = "Vereinigte Staaten: Verbraucherpreisindex",
subtitle = "Ausgewählte Waren und Dienstleistungen, Veränderung ggü. Vormonat im April und Mai 2021",
caption = "Quelle: Bureau of Labor Statistics, eigene Berechnungen.",
y="Veränderung ggü. Vormonat",
x = "Veränderung März 2021 ggü. Februar 2020")+
geom_vline(xintercept = 0)+
geom_text(mapping = aes(x = x_coord, y = y_coord, label = name),
data = df_text,
size = 4,
nudge_x = 0.4,
nudge_y = 0.4)
ggsave(filename = "plot_cpi_US.pdf", width = 12, height = 6, units = "in")
df_may21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-05-01"),
n = 20)
df_may21
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
df_apr21
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name, category) %>%
summarise(mm_rate = growth_rate(value, date, date_mm - months(1), date_mm)) %>%
arrange(desc(mm_rate)) %>%
head(n) -> df_tmp
# add weights back
df_out <- merge(df_tmp, select(df, name, date, weight), by = c("name", "date"))
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name, category) %>%
summarise(mm_rate = growth_rate(value, date, date_mm - months(1), date_mm)) %>%
arrange(desc(mm_rate)) %>%
head(n) -> df_tmp
# add weights back
df_out <- merge(df_tmp, select(df, name, weight), by = c("name"))
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
df_apr21
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name, category) %>%
summarise(mm_rate = growth_rate(value, date, date_mm - months(1), date_mm)) %>%
arrange(desc(mm_rate)) %>%
head(n) -> df_tmp
# add weights back
df_out <- merge(df_tmp, select(df, name, weight), by = c("name"))
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
df_apr21
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name, weight, category) %>%
summarise(mm_rate = growth_rate(value, date, date_mm - months(1), date_mm)) %>%
arrange(desc(mm_rate)) %>%
head(n) -> df_tmp
# add weights back
df_out <- merge(df_tmp, select(df, name, weight), by = c("name"))
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
df_apr21
View(df)
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name, category) %>%
summarise(mm_rate = growth_rate(value, date, date_mm - months(1), date_mm)) %>%
arrange(desc(mm_rate)) %>%
head(n) -> df_tmp
# add weights back
df_out <- merge(df_tmp, select(df, name, weight), by = c("name"))
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
df_apr21
df %>% group_by(name) %>% summarise(n())
df %>% group_by(name, weight) %>% summarise(n())
df %>% group_by(name) %>% summarise(n())
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name) %>%
summarise(mm_rate = growth_rate(value,
date,
date_mm - months(1),
date_mm)) %>%
arrange(desc(mm_rate)) %>%
head(n) -> df_tmp
# add weights back
df_out <- merge(df_tmp, select(df, name, weight), by = c("name"))
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
df_apr21
df %>% group_by(name, weight) %>% summarise(growth_rate(value, date, "2021-03-01", "2021-04-01")
)
df %>% group_by(name) %>% summarise(growth_rate(value, date, "2021-03-01", "2021-04-01"))
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name) %>%
summarise(mm_rate = growth_rate(value,
date,
date_mm - months(1),
date_mm)) %>%
mutate(date = date_mm)
arrange(desc(mm_rate)) %>%
head(n) -> df_tmp
# add weights back
df_out <- merge(df_tmp, select(df, name, date, weight,category), by = c("name", "date"))
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name) %>%
summarise(mm_rate = growth_rate(value,
date,
date_mm - months(1),
date_mm)) %>%
mutate(date = date_mm) %>%
arrange(desc(mm_rate)) %>%
head(n) -> df_tmp
# add weights back
df_out <- merge(df_tmp, select(df, name, date, weight,category), by = c("name", "date"))
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
df_apr21
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name) %>%
summarise(mm_rate = growth_rate(value,
date,
date_mm - months(1),
date_mm)) %>%
mutate(date = date_mm) %>%
arrange(desc(mm_rate)) %>%
head(n) -> df_tmp
# add weights back
df_out <- merge(df_tmp,
select(df, name, date, weight,category),
by = c("name", "date"))
# calculate weighted growth
df_out %>% mutate(mm_rate_weighted = mm_rate * weight/100) -> df_out
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
df_apr21
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name) %>%
summarise(mm_rate = growth_rate(value,
date,
date_mm - months(1),
date_mm)) %>%
mutate(date = date_mm) %>%
head(n) -> df_tmp
# add weights back
df_out <- merge(df_tmp,
select(df, name, date, weight,category),
by = c("name", "date"))
# calculate weighted growth
df_out %>% mutate(mm_rate_weighted = mm_rate * weight/100) %>%
arrange(mm_rate_weighted) -> df_out
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
df_apr21
top_movers <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name) %>%
summarise(mm_rate = growth_rate(value,
date,
date_mm - months(1),
date_mm)) %>%
mutate(date = date_mm) -> df_tmp
# add weights back
df_out <- merge(df_tmp,
select(df, name, date, weight,category),
by = c("name", "date"))
# calculate weighted growth
df_out %>% mutate(mm_rate_weighted = mm_rate * weight/100) %>%
arrange(mm_rate_weighted) %>%
head(n) -> df_out
}
df_apr21 <- top_movers(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"),
n = 20)
df_apr21
get_mm_growth_rate <- function(df, date_mm, n)
# find the n series with the largest m/m change
{
df %>%
group_by(name) %>%
summarise(mm_rate = growth_rate(value,
date,
date_mm - months(1),
date_mm)) %>%
mutate(date = date_mm) -> df_tmp
# add weights back
df_out <- merge(df_tmp,
select(df, name, date, weight,category),
by = c("name", "date"))
# calculate weighted growth
df_out %>% mutate(mm_rate_weighted = mm_rate * weight/100) %>%
arrange(mm_rate_weighted) -> df_out
}
get_mm_growth_rate <- function(df, date_mm)
# find the n series with the largest m/m change
{
df %>%
group_by(name) %>%
summarise(mm_rate = growth_rate(value,
date,
date_mm - months(1),
date_mm)) %>%
mutate(date = date_mm) -> df_tmp
# add weights back
df_out <- merge(df_tmp,
select(df, name, date, weight,category),
by = c("name", "date"))
# calculate weighted growth
df_out %>% mutate(mm_rate_weighted = mm_rate * weight/100) %>%
arrange(mm_rate_weighted) -> df_out
}
df_apr21 <- get_mm_growth_rate(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"))
df_apr21
df_apr21 <- get_mm_growth_rate(filter(df, level %in% c(4, 5, 6, 7, 8),
!(category %in% c("Energy", "Food"))),
date_mm = as_date("2021-04-01"))
df_apr21 %>% select(name, mm_rate, mm_rate_weighted)
df$weight
tmp3 %>%
filter(name %in% c("Car and truck rental",
"Airline fares",
"Used cars and trucks",
"New vehicles",
"Admissions",
"Other lodging away from home including hotels and motels")) -> df_plot
df_plot$name <- ifelse(df_plot$name == "Other lodging away from home including hotels and motels", "Hotels and motels", df_plot$name)
df_plot %>% group_by(name, diff_pandemic) %>%
summarise(y_coord = mean(value_mm)) %>%
select(name, x_coord = diff_pandemic, y_coord) -> df_text
df_plot %>%
ggplot(aes(x = diff_pandemic, y = value_mm))+
geom_point(aes(color = date_str, size = weight))+
scale_color_jco()+
ylim(c(0, 18))+
scale_size(breaks = c(0.1, 0.5, 2), labels = c("0.1%", "0.5%", "2%"))+
labs(title = "Vereinigte Staaten: Verbraucherpreisindex",
subtitle = "Ausgewählte Waren und Dienstleistungen, Veränderung ggü. Vormonat im April und Mai 2021",
caption = "Quelle: Bureau of Labor Statistics, eigene Berechnungen.",
y="Veränderung ggü. Vormonat",
x = "Veränderung März 2021 ggü. Februar 2020")+
geom_vline(xintercept = 0)+
geom_text(mapping = aes(x = x_coord, y = y_coord, label = name),
data = df_text,
size = 4,
nudge_x = 0.4,
nudge_y = 0.4)
ggsave(filename = "plot_cpi_US.pdf", width = 12, height = 6, units = "in")
