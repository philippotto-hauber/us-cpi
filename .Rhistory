name = sapply(name, gsub, pattern = "\\(.\\)", replacement = ""),
name = sapply(name, gsub, pattern = "\\(..\\)", replacement = "")) %>%
filter(!is.na(weight)) -> df
return(df)
}
url <- "https://www.bls.gov/cpi/tables/supplemental-files/news-release-table2-202101.xlsx"
fn <- "cpi_weights.xlsx"
download.file(url = url , destfile = fn, mode = "wb")
raw_weights <- read_excel(path = fn)
file.remove(fn)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = "2020") %>%
rename(weight_Dec = weight) %>%
select(-level)-> df_weights_Dec
rm(raw_weights, fn, url)
url <- "https://www.bls.gov/cpi/tables/supplemental-files/news-release-table2-202001.xlsx"
fn <- "cpi_weights.xlsx"
download.file(url = url , destfile = fn, mode = "wb")
raw_weights <- read_excel(path = fn)
file.remove(fn)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = "2019") %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, fn, url)
year_weights <- 2018
url <- paste0("https://www.bls.gov/cpi/tables/supplemental-files/archive-", year_weights+1, ".zip")
download.file(url = url, destfile = paste0("tmp", year_weights+1, ".zip"))
unzip(paste0("tmp", year_weights+1, ".zip"))
raw_weights <- read.xlsx(paste0("./archive-", year_weights+1, "/news-release-table2-", year_weights+1, "01.xlsx"))
file.remove(paste0("tmp", year_weights+1, ".zip"))
unlink(paste0("./archive-", year_weights+1, "/news-release-table2-", year_weights+1, "01.xlsx"))
file.remove(paste0("./archive-", year_weights+1, "/news-release-table2-", year_weights+1, "01.xlsx"))
unlink(paste0("archive-", year_weights+1))
raw_weights %>%
transform_raw_weights() %>%
mutate(year = !!year_weights) %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, url)
unlink(paste0("archive-", year_weights+1))
unlink(paste0("archive-", year_weights+1), recursive = T, force = T)
rm(list = ls())
library(dplyr, warn.conflicts = FALSE)
library(tidyr)
library(readxl)
library(openxlsx)
library(stringr)
library(lubridate)
library(ggplot2)
library(ggsci)
options(dplyr.summarise.inform = FALSE) # turn off annoying summarise warning!
raw_dat <- read.table("https://download.bls.gov/pub/time.series/cu/cu.data.0.Current", sep="\t", header=TRUE)
df_series <- filter(raw_dat, year >= 2019)
rm(raw_dat)
df_series %>%
separate(period, into = c("tmp", "month"), sep = 1) %>%
filter(tmp == "M") %>%
select(-tmp, -footnote_codes) %>%
mutate(month = as.numeric(month),
date = make_date(year = year, month = month)) %>%
select(-year, -month) -> df_series
df_series %>%
separate(series_id,
into = c("tmp", "sa", "periodicity", "area", "series"),
sep = c(2,3,4,8)
) %>%
filter(area == "0000",
periodicity == "R") %>%
mutate(series = str_trim(series)) %>%
select(-tmp, -area) %>%
drop_na() -> df_series
ind_keep <- df_series$sa == "S"
ind_keep[df_series$series == "SEGB"] <- TRUE
df_series <- df_series[ind_keep, ]
rm(ind_keep)
df_series <- select(df_series, date, series, value)
raw_names <- read.table(file = "https://download.bls.gov/pub/time.series/cu/cu.item", sep = "\t", header=T, stringsAsFactors = F, quote = "")
df_names <- select(raw_names, item_code, item_name, display_level)
rm(raw_names)
df <- merge(df_series, df_names, by.x = "series", by.y = "item_code")
df <- rename(df, name = item_name)
rm(df_names, df_series)
filter(df, name == "Personal care products")
n_obs_all_items <- sum(df$name == "All items")
df %>% group_by(name) %>% summarise(n_obs = n()) %>% filter(n_obs == n_obs_all_items) -> list_keep
df <- filter(df, name %in% list_keep$name)
rm(list_keep)
transform_raw_weights <- function(raw_data)
{
df <- raw_data[seq(6, nrow(raw_data)), seq(1, 3)]
names(df) <- c("level", "name", "weight")
df %>%
mutate(level = factor(as.integer(level)),
weight = as.numeric(weight),
name = sapply(name, gsub, pattern = "\\(.\\)", replacement = ""),
name = sapply(name, gsub, pattern = "\\(..\\)", replacement = "")) %>%
filter(!is.na(weight)) -> df
return(df)
}
url <- "https://www.bls.gov/cpi/tables/supplemental-files/news-release-table2-202101.xlsx"
fn <- "cpi_weights.xlsx"
download.file(url = url , destfile = fn, mode = "wb")
raw_weights <- read_excel(path = fn)
file.remove(fn)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = "2020") %>%
rename(weight_Dec = weight) %>%
select(-level)-> df_weights_Dec
rm(raw_weights, fn, url)
url <- "https://www.bls.gov/cpi/tables/supplemental-files/news-release-table2-202001.xlsx"
fn <- "cpi_weights.xlsx"
download.file(url = url , destfile = fn, mode = "wb")
raw_weights <- read_excel(path = fn)
file.remove(fn)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = "2019") %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, fn, url)
year_weights <- 2018
url <- paste0("https://www.bls.gov/cpi/tables/supplemental-files/archive-", year_weights+1, ".zip")
download.file(url = url, destfile = paste0("tmp", year_weights+1, ".zip"))
unzip(paste0("tmp", year_weights+1, ".zip"))
raw_weights <- read.xlsx(paste0("./archive-", year_weights+1, "/news-release-table2-", year_weights+1, "01.xlsx"))
file.remove(paste0("tmp", year_weights+1, ".zip"))
unlink(paste0("archive-", year_weights+1), recursive = T, force = T)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = !!year_weights) %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, url)
rm(list = ls())
library(dplyr, warn.conflicts = FALSE)
library(tidyr)
library(readxl)
library(openxlsx)
library(stringr)
library(lubridate)
library(ggplot2)
library(ggsci)
options(dplyr.summarise.inform = FALSE) # turn off annoying summarise warning!
raw_dat <- read.table("https://download.bls.gov/pub/time.series/cu/cu.data.0.Current", sep="\t", header=TRUE)
df_series <- filter(raw_dat, year >= 2019)
rm(raw_dat)
df_series %>%
separate(period, into = c("tmp", "month"), sep = 1) %>%
filter(tmp == "M") %>%
select(-tmp, -footnote_codes) %>%
mutate(month = as.numeric(month),
date = make_date(year = year, month = month)) %>%
select(-year, -month) -> df_series
df_series %>%
separate(series_id,
into = c("tmp", "sa", "periodicity", "area", "series"),
sep = c(2,3,4,8)
) %>%
filter(area == "0000",
periodicity == "R") %>%
mutate(series = str_trim(series)) %>%
select(-tmp, -area) %>%
drop_na() -> df_series
ind_keep <- df_series$sa == "S"
ind_keep[df_series$series == "SEGB"] <- TRUE
df_series <- df_series[ind_keep, ]
rm(ind_keep)
df_series <- select(df_series, date, series, value)
raw_names <- read.table(file = "https://download.bls.gov/pub/time.series/cu/cu.item", sep = "\t", header=T, stringsAsFactors = F, quote = "")
df_names <- select(raw_names, item_code, item_name, display_level)
rm(raw_names)
df <- merge(df_series, df_names, by.x = "series", by.y = "item_code")
df <- rename(df, name = item_name)
rm(df_names, df_series)
filter(df, name == "Personal care products")
n_obs_all_items <- sum(df$name == "All items")
df %>% group_by(name) %>% summarise(n_obs = n()) %>% filter(n_obs == n_obs_all_items) -> list_keep
df <- filter(df, name %in% list_keep$name)
rm(list_keep)
transform_raw_weights <- function(raw_data)
{
df <- raw_data[seq(6, nrow(raw_data)), seq(1, 3)]
names(df) <- c("level", "name", "weight")
df %>%
mutate(level = factor(as.integer(level)),
weight = as.numeric(weight),
name = sapply(name, gsub, pattern = "\\(.\\)", replacement = ""),
name = sapply(name, gsub, pattern = "\\(..\\)", replacement = "")) %>%
filter(!is.na(weight)) -> df
return(df)
}
url <- "https://www.bls.gov/cpi/tables/supplemental-files/news-release-table2-202101.xlsx"
fn <- "cpi_weights.xlsx"
download.file(url = url , destfile = fn, mode = "wb")
raw_weights <- read_excel(path = fn)
file.remove(fn)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = "2020") %>%
rename(weight_Dec = weight) %>%
select(-level)-> df_weights_Dec
rm(raw_weights, fn, url)
url <- "https://www.bls.gov/cpi/tables/supplemental-files/news-release-table2-202001.xlsx"
fn <- "cpi_weights.xlsx"
download.file(url = url , destfile = fn, mode = "wb")
raw_weights <- read_excel(path = fn)
file.remove(fn)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = "2019") %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, fn, url)
for (year_weights in c(2012:2018))
{
year_weights <- 2018
url <- paste0("https://www.bls.gov/cpi/tables/supplemental-files/archive-", year_weights+1, ".zip")
download.file(url = url, destfile = paste0("tmp", year_weights+1, ".zip"))
unzip(paste0("tmp", year_weights+1, ".zip"))
raw_weights <- read.xlsx(paste0("./archive-", year_weights+1, "/news-release-table2-", year_weights+1, "01.xlsx"))
file.remove(paste0("tmp", year_weights+1, ".zip"))
unlink(paste0("archive-", year_weights+1), recursive = T, force = T)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = !!year_weights) %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, url)
}
View(df_weights_Dec)
filter(df_weights_Dec, year == 2012)
rm(list = ls())
library(dplyr, warn.conflicts = FALSE)
library(tidyr)
library(readxl)
library(openxlsx)
library(stringr)
library(lubridate)
library(ggplot2)
library(ggsci)
options(dplyr.summarise.inform = FALSE) # turn off annoying summarise warning!
raw_dat <- read.table("https://download.bls.gov/pub/time.series/cu/cu.data.0.Current", sep="\t", header=TRUE)
df_series <- filter(raw_dat, year >= 2019)
rm(raw_dat)
df_series %>%
separate(period, into = c("tmp", "month"), sep = 1) %>%
filter(tmp == "M") %>%
select(-tmp, -footnote_codes) %>%
mutate(month = as.numeric(month),
date = make_date(year = year, month = month)) %>%
select(-year, -month) -> df_series
df_series %>%
separate(series_id,
into = c("tmp", "sa", "periodicity", "area", "series"),
sep = c(2,3,4,8)
) %>%
filter(area == "0000",
periodicity == "R") %>%
mutate(series = str_trim(series)) %>%
select(-tmp, -area) %>%
drop_na() -> df_series
ind_keep <- df_series$sa == "S"
ind_keep[df_series$series == "SEGB"] <- TRUE
df_series <- df_series[ind_keep, ]
rm(ind_keep)
df_series <- select(df_series, date, series, value)
raw_names <- read.table(file = "https://download.bls.gov/pub/time.series/cu/cu.item", sep = "\t", header=T, stringsAsFactors = F, quote = "")
df_names <- select(raw_names, item_code, item_name, display_level)
rm(raw_names)
df <- merge(df_series, df_names, by.x = "series", by.y = "item_code")
df <- rename(df, name = item_name)
rm(df_names, df_series)
filter(df, name == "Personal care products")
n_obs_all_items <- sum(df$name == "All items")
df %>% group_by(name) %>% summarise(n_obs = n()) %>% filter(n_obs == n_obs_all_items) -> list_keep
df <- filter(df, name %in% list_keep$name)
rm(list_keep)
transform_raw_weights <- function(raw_data)
{
df <- raw_data[seq(6, nrow(raw_data)), seq(1, 3)]
names(df) <- c("level", "name", "weight")
df %>%
mutate(level = factor(as.integer(level)),
weight = as.numeric(weight),
name = sapply(name, gsub, pattern = "\\(.\\)", replacement = ""),
name = sapply(name, gsub, pattern = "\\(..\\)", replacement = "")) %>%
filter(!is.na(weight)) -> df
return(df)
}
url <- "https://www.bls.gov/cpi/tables/supplemental-files/news-release-table2-202101.xlsx"
fn <- "cpi_weights.xlsx"
download.file(url = url , destfile = fn, mode = "wb")
raw_weights <- read_excel(path = fn)
file.remove(fn)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = "2020") %>%
rename(weight_Dec = weight) %>%
select(-level)-> df_weights_Dec
rm(raw_weights, fn, url)
url <- "https://www.bls.gov/cpi/tables/supplemental-files/news-release-table2-202001.xlsx"
fn <- "cpi_weights.xlsx"
download.file(url = url , destfile = fn, mode = "wb")
raw_weights <- read_excel(path = fn)
file.remove(fn)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = "2019") %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, fn, url)
for (year_weights in c(2012:2018))
{
url <- paste0("https://www.bls.gov/cpi/tables/supplemental-files/archive-", year_weights+1, ".zip")
download.file(url = url, destfile = paste0("tmp", year_weights+1, ".zip"))
unzip(paste0("tmp", year_weights+1, ".zip"))
raw_weights <- read.xlsx(paste0("./archive-", year_weights+1, "/news-release-table2-", year_weights+1, "01.xlsx"))
file.remove(paste0("tmp", year_weights+1, ".zip"))
unlink(paste0("archive-", year_weights+1), recursive = T, force = T)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = !!year_weights) %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, url)
}
for (year_weights in c(2017:2018))
{
url <- paste0("https://www.bls.gov/cpi/tables/supplemental-files/archive-", year_weights+1, ".zip")
download.file(url = url, destfile = paste0("tmp", year_weights+1, ".zip"))
unzip(paste0("tmp", year_weights+1, ".zip"))
raw_weights <- read.xlsx(paste0("./archive-", year_weights+1, "/news-release-table2-", year_weights+1, "01.xlsx"))
file.remove(paste0("tmp", year_weights+1, ".zip"))
unlink(paste0("archive-", year_weights+1), recursive = T, force = T)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = !!year_weights) %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, url)
}
list.dirs()
length(list.dirs)
length(list.dirs())
for (year_weights in c(2017:2018))
{
url <- paste0("https://www.bls.gov/cpi/tables/supplemental-files/archive-", year_weights+1, ".zip")
download.file(url = url, destfile = paste0("tmp", year_weights+1, ".zip"))
list_dir_old <- list.dirs()
unzip(paste0("tmp", year_weights+1, ".zip"))
dir_in <- setdiff(list.dirs, list_dir_old)
raw_weights <- read.xlsx(paste0("./", dir_in, "/", year_weights+1, "/news-release-table2-", year_weights+1, "01.xlsx"))
file.remove(paste0("tmp", year_weights+1, ".zip"))
unlink(paste0("archive-", year_weights+1), recursive = T, force = T)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = !!year_weights) %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, url)
}
dir_in <- setdiff(list.dirs, list_dir_old)
list.dirs()
list_dir_old
list_dir_old <- list.dirs()
unzip(paste0("tmp", year_weights+1, ".zip"))
dir_in <- setdiff(list.dirs(), list_dir_old)
raw_weights <- read.xlsx(paste0(dir_in, "/", year_weights+1, "/news-release-table2-", year_weights+1, "01.xlsx"))
raw_weights <- read.xlsx(paste0(dir_in, "/news-release-table2-", year_weights+1, "01.xlsx"))
file.remove(paste0("tmp", year_weights+1, ".zip"))
unlink(paste0("archive-", year_weights+1), recursive = T, force = T)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = !!year_weights) %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, url)
for (year_weights in c(2017:2018))
{
url <- paste0("https://www.bls.gov/cpi/tables/supplemental-files/archive-", year_weights+1, ".zip")
download.file(url = url, destfile = paste0("tmp", year_weights+1, ".zip"))
list_dir_old <- list.dirs()
unzip(paste0("tmp", year_weights+1, ".zip"))
dir_in <- setdiff(list.dirs(), list_dir_old)
raw_weights <- read.xlsx(paste0(dir_in, "/news-release-table2-", year_weights+1, "01.xlsx"))
file.remove(paste0("tmp", year_weights+1, ".zip"))
unlink(paste0("archive-", year_weights+1), recursive = T, force = T)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = !!year_weights) %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, url)
}
rm(list = ls())
library(dplyr, warn.conflicts = FALSE)
library(tidyr)
library(readxl)
library(openxlsx)
library(stringr)
library(lubridate)
library(ggplot2)
library(ggsci)
options(dplyr.summarise.inform = FALSE) # turn off annoying summarise warning!
raw_dat <- read.table("https://download.bls.gov/pub/time.series/cu/cu.data.0.Current", sep="\t", header=TRUE)
df_series <- filter(raw_dat, year >= 2019)
rm(raw_dat)
df_series %>%
separate(period, into = c("tmp", "month"), sep = 1) %>%
filter(tmp == "M") %>%
select(-tmp, -footnote_codes) %>%
mutate(month = as.numeric(month),
date = make_date(year = year, month = month)) %>%
select(-year, -month) -> df_series
df_series %>%
separate(series_id,
into = c("tmp", "sa", "periodicity", "area", "series"),
sep = c(2,3,4,8)
) %>%
filter(area == "0000",
periodicity == "R") %>%
mutate(series = str_trim(series)) %>%
select(-tmp, -area) %>%
drop_na() -> df_series
ind_keep <- df_series$sa == "S"
ind_keep[df_series$series == "SEGB"] <- TRUE
df_series <- df_series[ind_keep, ]
rm(ind_keep)
df_series <- select(df_series, date, series, value)
raw_names <- read.table(file = "https://download.bls.gov/pub/time.series/cu/cu.item", sep = "\t", header=T, stringsAsFactors = F, quote = "")
df_names <- select(raw_names, item_code, item_name, display_level)
rm(raw_names)
df <- merge(df_series, df_names, by.x = "series", by.y = "item_code")
df <- rename(df, name = item_name)
rm(df_names, df_series)
filter(df, name == "Personal care products")
n_obs_all_items <- sum(df$name == "All items")
df %>% group_by(name) %>% summarise(n_obs = n()) %>% filter(n_obs == n_obs_all_items) -> list_keep
df <- filter(df, name %in% list_keep$name)
rm(list_keep)
transform_raw_weights <- function(raw_data)
{
df <- raw_data[seq(6, nrow(raw_data)), seq(1, 3)]
names(df) <- c("level", "name", "weight")
df %>%
mutate(level = factor(as.integer(level)),
weight = as.numeric(weight),
name = sapply(name, gsub, pattern = "\\(.\\)", replacement = ""),
name = sapply(name, gsub, pattern = "\\(..\\)", replacement = "")) %>%
filter(!is.na(weight)) -> df
return(df)
}
url <- "https://www.bls.gov/cpi/tables/supplemental-files/news-release-table2-202101.xlsx"
fn <- "cpi_weights.xlsx"
download.file(url = url , destfile = fn, mode = "wb")
raw_weights <- read_excel(path = fn)
file.remove(fn)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = "2020") %>%
rename(weight_Dec = weight) %>%
select(-level)-> df_weights_Dec
rm(raw_weights, fn, url)
url <- "https://www.bls.gov/cpi/tables/supplemental-files/news-release-table2-202001.xlsx"
fn <- "cpi_weights.xlsx"
download.file(url = url , destfile = fn, mode = "wb")
raw_weights <- read_excel(path = fn)
file.remove(fn)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = "2019") %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, fn, url)
for (year_weights in c(2017:2018))
{
url <- paste0("https://www.bls.gov/cpi/tables/supplemental-files/archive-", year_weights+1, ".zip")
download.file(url = url, destfile = paste0("tmp", year_weights+1, ".zip"))
list_dir_old <- list.dirs()
unzip(paste0("tmp", year_weights+1, ".zip"))
dir_in <- setdiff(list.dirs(), list_dir_old)
raw_weights <- read.xlsx(paste0(dir_in, "/news-release-table2-", year_weights+1, "01.xlsx"))
file.remove(paste0("tmp", year_weights+1, ".zip"))
unlink(paste0("archive-", year_weights+1), recursive = T, force = T)
raw_weights %>%
transform_raw_weights() %>%
mutate(year = !!year_weights) %>%
rename(weight_Dec = weight) %>%
select(-level) %>%
rbind(df_weights_Dec) -> df_weights_Dec
rm(raw_weights, url)
}
filter(df_weights_Dec, year = 2018)
filter(df_weights_Dec, year == 2018)
filter(df_weights_Dec, year == 2017)
